# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Board {
  created_date: DateTime!
  deleted_date: DateTime
  description: String!
  id: Float!
  title: String!
  updated_data: DateTime!
}

type Comment {
  content: String!
  created_date: DateTime!
  deleted_date: DateTime
  id: Float!
  post: Post!
  updated_data: DateTime!
  user: User!
}

input CreateBoardInputDto {
  description: String
  title: String!
}

input CreateCommentInputDto {
  content: String!
  postId: Int!
}

input CreatePostInputDto {
  boardId: Int!
  content: String!
  image: String
  title: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input FindPostByTitleInputDto {
  title: String!
}

type Like {
  created_date: DateTime!
  deleted_date: DateTime
  id: Float!
  post: Post!
  postId: Float!
  updated_data: DateTime!
  user: User!
  userId: Float!
}

input LikePostInputDto {
  like: Boolean!
  postId: Int!
}

type Mutation {
  """게시판 생성"""
  createBoard(input: CreateBoardInputDto!): Board!

  """댓글 작성"""
  createComment(input: CreateCommentInputDto!): Comment!

  """게시글 작성"""
  createPost(input: CreatePostInputDto!): Post!

  """게시판 삭제"""
  deleteBoard(boardId: Int!): Boolean!

  """댓글 삭제"""
  deleteComment(commentId: Int!): Boolean!

  """게시글 삭제"""
  deletePost(postId: Int!): Boolean!

  """관리자용 게시글 삭제"""
  deletePostAdmin(postId: Int!): Boolean!

  """게시글 좋아요 클릭"""
  likePost(input: LikePostInputDto!): Boolean!

  """로그인"""
  signin(input: SignInInputDto!): SignInOutputDto!

  """회원가입"""
  signup(input: SignUpInputDto!): SignUpOutputDto!

  """게시판 이름 수정"""
  updateBoard(input: UpdateBoardInputDto!): Board!

  """유저 정보 변경하기"""
  updateMe(isPush: Boolean!, nickName: String!): User!

  """게시글 수정"""
  updatePost(input: UpdatePostInputDto!): Post!
}

type Post {
  board: Board!
  comments: [Comment!]!
  content: String!
  created_date: DateTime!
  deleted_date: DateTime
  id: Float!
  image: String
  likes: [Like!]!
  title: String!
  updated_data: DateTime!
  user: User!
  userId: Int!
}

type Query {
  """게시글 제목으로 조회"""
  findPostByTitle(input: FindPostByTitleInputDto!): Post!

  """게시판 리스트 조회"""
  getAllBoard: [Board!]!

  """게시판의 모든 게시물 조회"""
  getBoardPosts(id: Int!): [Post!]!

  """내 정보 가져오기"""
  getMe: User!

  """한개의 게시글 조회"""
  getOnePost(id: Int!): Post!

  """인기 게시물 조회"""
  getPopularPosts: [Post!]!
  hello: String!
}

input SignInInputDto {
  """이메일"""
  email: String!

  """비밀번호"""
  password: String!
}

type SignInOutputDto {
  """고유ID"""
  id: Float!

  """토큰"""
  token: String!
}

input SignUpInputDto {
  email: String!
  nickName: String!
  password: String!
}

type SignUpOutputDto {
  isSuccess: Boolean!
}

input UpdateBoardInputDto {
  id: Int!
  title: String!
}

input UpdatePostInputDto {
  content: String
  id: Int!
  image: String
  title: String
}

type User {
  comments: [Comment!]
  created_date: DateTime!
  deleted_date: DateTime
  email: String!
  id: Float!
  isPush: Boolean!
  likes: [Like!]
  nickName: String!
  posts: [Post!]
  pushToken: String
  role: UserRole!
  updated_data: DateTime!
}

"""유저 권한 리스트"""
enum UserRole {
  """관리자"""
  ADMIN

  """일반 유저"""
  USER
}